components:
  schemas:
    movie:
      type: object
      properties:
        id:
          type: string
          description: the autogenerated id of the movie
        title:
          type: string
          description: title of the movie
        year:
          type: integer
          description: year of the movie
        available:
          type: boolean
          description: if movie is available for rent
        cast:
          type: object
          description: main cast
        genre:
          type: object
          description: genres of the movie
      example:
        id: 605b6485f0f9462918e51952
        title: Interstellar
        year: 2013
        cast: [Matthew McConaughey, Anne Hathaway, Jessica Chastain]
        genre: [Science-Fiction, Drama]

tags:
  name: movies
  description: The movies managing API

paths:
  /movies:
    get:
      summary: Returns the list of all movies
      tags: [movies]
      responses:
        200:
          description: the list of the movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/movie"

  /movies/id/{id}:
    get:
      summary: Get the movie by id
      tags: [movies]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: the movie id
      responses:
        200:
          description: the movie description by id
          contents:
            application/json:
              schema:
                $ref: "#/components/schemas/movie"
        404:
          description: the movie was not found
    post:
      summary: Add a new movie to db
      tags: [movies]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/movie"
      responses:
        200:
          description: the movie was successfully created
          content:
            application/json:
              schema:
                #ref: '#/components/schemas/movie'
        400:
          description: Some server error

  /movies/{id}:
    delete:
      summary: Remove the movie by id
      tags: [movies]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: the movie id
      responses:
        200:
          description: The movie was removed successfully
        404:
          description: The movie was not found
    put:
      summary: Update the movie by id
      tags: [movies]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/movie"
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: the movie id
      responses:
        200:
          description: The movie was updated successfully
        400:
          description: The movie was not updated
